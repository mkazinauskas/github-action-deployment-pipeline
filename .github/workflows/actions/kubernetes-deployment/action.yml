name: 'Kuberntes deployment'
description: 'Creates deployment to kubernetes from parameters'

inputs:
  registryUrl:
    required: true
    description: 'Docker registry URL'
  registryUsername:
    required: true
    description: 'Docker registry login username'
  registryPassword:
    required: true
    description: 'Docker registry login password or token'
  registryNamespace:
    required: true
    description: 'Namespace where to deploy image'
  registryArtifact:
    required: true
    description: 'Docker registry artifact'
  imageVersion:
    required: true
    description: 'Docker image version'
  kubectlVersion:
    required: true
    description: 'Version of kubectl'
    default: 'latest'
  kuberntesConfig:
    required: true
    description: 'Kubernetes configuration file'
    default: 'latest'
  kuberntesNamespace:
    required: true
    description: 'Kubernetes namespace for deployment'
    default: 'latest'
  kubernetesAppName:
    required: true
    description: 'Kubernetes app name'
    default: 'latest'

runs:
  using: "composite"
  steps:
    - name: Generate image name
      id: image_info
      run: echo "::set-output name=image::${{ inputs.registryNamespace }}/${{ inputs.registryArtifact }}:${{ inputs.imageVersion }}"

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.registryUrl }}
        username: ${{ inputs.registryUsername }}
        password: ${{ inputs.registryPassword }}

    - name: Check if image exists in registry
      run: docker pull "${{ steps.image_info.outputs.image }}"

    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: ${{ inputs.kubectlVersion }}

    - name: Make .kube directory
      run: mkdir ~/.kube

    - name: Add kubernetes credentials
      run: echo "${{ inputs.kuberntesConfig }}" | base64 --decode > ~/.kube/config

    - name: Prepare deployment file
      run: |
        sed -i 's;{{APP_NAME}};${{ inputs.kubernetesAppName }};g' ".github/workflows/deployments/deployment_template.yaml"
        sed -i 's;{{NAMESPACE}};${{ inputs.kuberntesNamespace }};g' ".github/workflows/deployments/deployment_template.yaml"
        sed -i 's;{{IMAGE}};${{ steps.image_info.outputs.image }};g' ".github/workflows/deployments/deployment_template.yaml"
        cat ".github/workflows/deployments/deployment_template.yaml"

    - name: Deploy new version
      run: kubectl apply -f ".github/workflows/deployments/deployment_template.yaml"

    - name: Check if deployment successful
      timeout-minutes: 2
      run: kubectl -n ${{ inputs.kuberntesNamespace }} rollout status deployment ${{ inputs.kubernetesAppName }}