name: Deployment pipeline

on:
  workflow_dispatch:

env:
  DOCKER_REGISTRY_URL: docker.io
  DOCKER_REGISTRY_NAMESPACE: mkazinauskas
  DOCKER_REGISTRY_ARTIFACT: github-actions-deployment-pipeline-app

jobs:
  build-and-publish:
    name: Building and publishing artifact
    runs-on: ubuntu-latest
    steps:
      - name: Project checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build PR
        run: ./gradlew build -i

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: Generate image timestamp
        id: timestamp_generator
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 2
          format: 'YYYY-MM-DD-HH-mm-ss'

      - name: Build docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: "${{ env.DOCKER_REGISTRY_NAMESPACE }}/${{ env.DOCKER_REGISTRY_ARTIFACT }}:${{ steps.timestamp_generator.outputs.time }}"
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: "release/${{ steps.timestamp_generator.outputs.time }}"
          release_name: "Release of `${{ env.DOCKER_REGISTRY_NAMESPACE }}/${{ env.DOCKER_REGISTRY_ARTIFACT }}:${{ steps.timestamp_generator.outputs.time }}`"
          body: |
            New release of great project!
          draft: false
          prerelease: false

  deploy-to-test:
    name: Deploy application to Test environment
    runs-on: ubuntu-latest
    needs: build-and-publish
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: Check if image exists in registry
        run: docker images -q "${{ env.DOCKER_REGISTRY_NAMESPACE }}/${{ env.DOCKER_REGISTRY_ARTIFACT }}:${{ steps.timestamp_generator.outputs.time }}"

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest' # default is latest stable
        id: install

      - name: Make .kube directory
        run: mkdir ~/.kube

      - name: Deploy to test
        run: echo "Deploying to test"

  deploy-to-stage:
    name: Deploy application to Stage environment
    runs-on: ubuntu-latest
    needs: deploy-to-test
    environment:
      name: stage
      url: https://github.com/mkazinauskas/github-actions-deployment-pipeline
    steps:
      - name: Deploy to Stage
        run: echo "Deploying to stage"

  deploy-to-production:
    name: Deploy application to Production environment
    runs-on: ubuntu-latest
    needs: deploy-to-stage
    environment:
      name: prod
      url: https://github.com/mkazinauskas/github-actions-deployment-pipeline
    steps:
      - name: Deploy to Production
        run: echo "Deploying to Production"